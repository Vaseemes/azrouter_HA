- hosts: localhost
  vars:
    vars:
      uucloud: "{{ lookup('file', ('ansible/playbooks/config/standard.json') }}"
      output_file_path: "/ansible/prdel.json"

  tasks:
    - set_fact:
        apps:
          - name: "rancher"
            url: "https://api.github.com/repos/rancher/rancher/releases/latest"
#            currentVersion: "{{ uucloud.services.rancher.versions.rancherImage }}"
          - name: "rke2"
            url: "https://api.github.com/repos/rancher/rancher/releases/latest"
#            currentVersion: "{{ uucloud.services.kubernetes.rke2_version }}"
          - name: "openebs_localpvImage"
            url: "https://api.github.com/repos/openebs/dynamic-localpv-provisioner/releases/latest"
#            currentVersion: "{{ uucloud.services.openebs.versions.localpvImage }}"
          - name: "openebs_linuxUtils"
            url: "https://api.github.com/repos/openebs/linux-utils/releases/latest"
#            currentVersion: "{{ uucloud.services.openebs.versions.linuxUtilsImage }}"
          - name: "cert-manager"
            url: "https://api.github.com/repos/cert-manager/cert-manager/releases/latest"
#            currentVersion: "{{ uucloud.services.certman.versions.wekhookImage }}"
          - name: "ingress-nginx"
            url: "https://api.github.com/repos/kubernetes/ingress-nginx/releases/latest"
#            currentVersion: "{{ uucloud.services.ingress.versions.controllerImage }}"
          - name: "harbor"
            url: "https://api.github.com/repos/goharbor/harbor/releases/latest"
#            currentVersion: "{{ uucloud.services.harbor.versions.harborPortalImage }}"
          - name: "grafana"
            url: "https://api.github.com/repos/grafana/grafana/releases/latest"
#            currentVersion: "{{ uucloud.services.grafana.versions.grafanaImage }}"

    - set_fact:
        docker_images:
          - name: "mongo"
            repo: "percona/percona-server-mongodb"
#            currentVersion: "{{ uucloud.services.mongo.versions.mongoImage }}"
          - name: "nexus"
            repo: "sonatype/nexus3"
#            currentVersion: "{{ uucloud.services.nexus.versions.nexusImage }}"
          - name: "opensearch-dashboards"
            repo: "opensearchproject/opensearch-dashboards"
#            currentVersion: "{{ uucloud.services.opensearch.versions.dashboardImage }}"
          - name: "downloadDashboardsImage"
            repo: "curlimages/curl"
#            currentVersion: "{{ uucloud.services.grafana.versions.downloadDashboardsImage }}"
          - name: "prometheus"
            repo: "bitnami/prometheus"
#            currentVersion: "{{ uucloud.services.prometheus.versions.prometheusImage }}"
          - name: "graylog"
            repo: "graylog/graylog"
#            currentVersion: "{{ uucloud.services.graylog.versions.graylogImage }}"
          - name: "rabbit"
            repo: "bitnami/rabbitmq"
#            currentVersion: "{{ uucloud.services.rabbit.versions.rabbitImage }}"
          - name: "minioImage"
            repo: "minio/minio"
#            currentVersion: "{{ uucloud.services.minio.versions.minioImage }}"
          - name: "mcImage"
            repo: "minio/mc"
#            currentVersion: "{{ uucloud.services.minio.versions.mcImage }}"


    - name: Check versions
      uri:
        url: "{{ item.url }}"
        method: GET
        return_content: yes
      register: latest_releases
      loop: "{{ apps }}"

    - name: Check latest Docker Hub versions
      uri:
        url: "https://registry.hub.docker.com/v2/repositories/{{ item.repo }}/tags?page_size=4"
        method: GET
        return_content: yes
      register: docker_tags
      loop: "{{ docker_images }}"

    - name: Set Docker image suitable tags
      set_fact:
        suitable_tags: "{{ suitable_tags | default({}) | combine({ item.item.name: (item.json.results | selectattr('name', 'search', '^(?!latest$)(?!sha256-)(?!.*debian.*)(?!.*java.*)(?!.*rc.*).*$') | map(attribute='name') | list | first | default('No suitable tag found')) }) }}"
      loop: "{{ docker_tags.results }}"

    - name: Combine all information into a list
      set_fact:
        version_info: "{{ version_info | default([]) + [{'name': item.item.name, 'new_version': item.json.tag_name, 'url': item.item.url}] }}"
      loop: "{{ latest_releases.results }}"

    - name: Add docker images to version info
      set_fact:
        version_info: "{{ version_info | default([]) + [{'name': item.item.name, 'new_version': suitable_tags[item.item.name], 'url': 'https://registry.hub.docker.com/v2/repositories/' + item.item.repo + '/tags'}] }}"
      loop: "{{ docker_tags.results }}"

    - name: Write version info to a file
      vars:
        output_file_path: ./prdel.json
      copy:
        content: "{{ version_info | to_nice_json }}"
        dest: "{{ output_file_path }}"